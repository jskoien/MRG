% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MRGratio.R
\name{MRGratio}
\alias{MRGratio}
\title{This function will compute the ratio between two variables}
\usage{
MRGratio(
  himg,
  ifg,
  var1,
  var2,
  weight1,
  weight2 = weight1,
  mincount = 10,
  nlarge = 2,
  plim = 0.85,
  domEstat = TRUE,
  postProcess = TRUE,
  rounding = 10
)
}
\arguments{
\item{himg}{A highest possible resolution grid, created with the multiResGrid function, for a variable}

\item{ifg}{An sf-object with the locations and the data of the holdings}

\item{var1}{The variable of the nominator in the ratio}

\item{var2}{The variable of the denominator in the ratio}

\item{weight1}{The weights of the variable of the nominator in the ratio}

\item{weight2}{The weights of the variable of the denominator in the ratio}

\item{mincount}{The minimum number of farms for a grid cell (threshold rule)}

\item{nlarge}{Parameter to be used if the nlarge(st) farms should count for maximum plim percent of
the total value for the variable in the grid cell (see details)}

\item{plim}{See nlarge, and details below}

\item{domEstat}{Should the dominance rule be applied as in the IFS handbook (TRUE), where 
 the weights are rounded before finding the first nlarge contributors, or should 
it be the first nlarge contributors*weight, where also fractions are considered (FALSE)?}

\item{postProcess}{Logical; should the postprocessing be done as part
of creation of the multiresolution grid (TRUE), or be done in a separate 
step afterwards (FALSE). The second option is useful when wanting
to check the confidential grid cells of the final map}

\item{rounding}{rounding is usually not applied for ratios, hence the high default value (meaning no rounding)"}
}
\description{
This function will compute the ratio between two variables
}
\examples{
library(sf)
library(viridis)
library(ggplot2)
library(patchwork)
library(giscoR)

# These are SYNTHETIC agricultural FSS data 
data(ifs_dk) # Census data

# Create spatial data
ifg = fssgeo(ifs_dk, locAdj = "LL")
# Read country borders, only used for plotting
borders = gisco_get_nuts(nuts_level = 0)
dkb = borders[borders$CNTR_CODE == "DK",] \%>\% st_transform(crs = 3035)

ifg_org = ifg[ifg$UAAXK0000_ORG > 0, ]
ress = c(1,5,10,20,40,80)*1000
ifl = gridData(ifg_org, "UAAXK0000_ORG", res = ress)
# Create multi-resolution grid of organic UAA
himg1 = multiResGrid(ifl, ifg = ifg_org, var = "UAAXK0000_ORG")

# Create the ratio between organic UAA and total UAA per grid cell
himg2 = MRGratio(himg1, ifg, "UAAXK0000_ORG", "UAA")
g2 = ggplot() + geom_sf(data = himg2, aes(fill = ratio*100)) +
  scale_fill_viridis( name = bquote(atop("Percentage Org UAA", "of total UAA"))) +
  geom_sf(data = dkb, fill = NA, colour='black', lwd = 1) +
  coord_sf(crs = 3035) +#, xlim = c(2377294, 6400000), ylim = c(1313597, 5628510)) +
  ggtitle(bquote("Ratio between organic UAA and total UAA")) + 
  theme_bw()
g2


# Create the ratio between organic UAA and total UAA per grid cell
himg2 = MRGratio(himg1, ifg, "UAAXK0000_ORG", "UAA")
g2 = ggplot() + geom_sf(data = himg2, aes(fill = ratio*100)) +
  scale_fill_viridis( name = bquote(atop("Percentage Org UAA", "of total UAA"))) +
  geom_sf(data = dkb, fill = NA, colour='black', lwd = 1) +
  coord_sf(crs = 3035) +#, xlim = c(2377294, 6400000), ylim = c(1313597, 5628510)) +
  ggtitle(bquote("Ratio between organic UAA and total UAA")) + 
  theme_bw()
g2


}
